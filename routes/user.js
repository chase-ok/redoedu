// Generated by CoffeeScript 1.6.3
var User, check, checkAge, checkAll, checkCategory, checkEmail, checkLocation, checkName, listEmails, optional, putEmail, putUser, userCategories, _ref, _ref1,
  __indexOf = [].indexOf || function(item) { for (var i = 0, l = this.length; i < l; i++) { if (i in this && this[i] === item) return i; } return -1; };

_ref = require('../data/user'), User = _ref.User, userCategories = _ref.userCategories;

check = require('validator').check;

_ref1 = require('../lib/utils'), checkAll = _ref1.checkAll, optional = _ref1.optional;

checkEmail = function(req) {
  check(req.body.email).len(6, 64).isEmail();
  return req.body.email;
};

checkName = function(req) {
  check(req.body.name).len(3, 64);
  return req.body.name;
};

checkAge = optional(null, function(req) {
  check(req.body.age).isInt();
  return req.body.name | 0;
});

checkCategory = function(req) {
  var category, e;
  category = req.body.category;
  try {
    check(category).isAlpha();
    if (__indexOf.call(userCategories, category) < 0) {
      throw "Not a recognized category: " + category;
    }
  } catch (_error) {
    e = _error;
    return userCategories[0];
  }
};

checkLocation = optional(null, function(req) {
  check(req.body.location).len(2, 128);
  return req.body.location;
});

putEmail = function(req, res) {
  var email, err, user, _ref2, _ref3;
  _ref2 = checkAll(req, res, {
    email: checkEmail
  }), err = _ref2[0], (_ref3 = _ref2[1], email = _ref3.email);
  console.log([err, email]);
  if (err) {
    return;
  }
  user = new User({
    email: email
  });
  user.save(function(err) {
    if (err) {
      return console.log("Couldn't save user: " + err);
    }
  });
  return res.json({
    success: true
  });
};

putUser = function(req, res) {
  var err, fields, user, _ref2;
  _ref2 = checkAll(req, res, {
    email: checkEmail,
    name: checkName,
    age: checkAge,
    category: checkCategory,
    location: checkLocation
  }), err = _ref2[0], fields = _ref2[1];
  if (err) {
    return;
  }
  user = new User(fields);
  user.save(function(err) {
    if (err) {
      return console.log("Couldn't save user: " + err);
    }
  });
  return res.json({
    success: true
  });
};

listEmails = function(req, res) {
  return User.find({}, function(err, users) {
    var user;
    if (err) {
      return res.json({
        success: false,
        error: "" + err
      });
    } else {
      return res.json({
        success: true,
        emails: (function() {
          var _i, _len, _results;
          _results = [];
          for (_i = 0, _len = users.length; _i < _len; _i++) {
            user = users[_i];
            _results.push(user.email);
          }
          return _results;
        })()
      });
    }
  });
};

exports.create = function(app) {
  app.put('/user/email', putEmail);
  app.put('/user', putUser);
  return app.get('/user/email/all', listEmails);
};
